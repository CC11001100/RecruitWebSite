package org.cc11001100.jfinal.modle;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang.StringUtils;
import org.cc11001100.jfinal.modle.base.BaseJob;
import org.cc11001100.jfinal.utils.GenUtil;

import com.jfinal.plugin.activerecord.Db;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Job extends BaseJob<Job> {
	
	public static final Job dao = new Job().dao();
	
	/**此职位关联到的公司*/
	private Company company;

	public Company getCompany() {
		if(company==null){
			company=Company.dao.findById(getCompanyId());
		}
		return company;
	}

	public Job setCompany(Company company) {
		this.company = company;
		return this;
	}
	
	/**此职位收到的简历*/
	private List<Resume> resume;

	public List<Resume> getResume() {
		if(resume!=null){
			return resume;
		}
		String sql="SELECT * FROM t_resume_deliver WHERE job_id=?";
		List<ResumeDeliver> resumeDeliverList=ResumeDeliver.dao.find(sql, getId());
		resume=new ArrayList<>();
		for(ResumeDeliver resumeDeliver : resumeDeliverList){
			resume.add(Resume.dao.findById(resumeDeliver.getResumeId()));
		}
		return resume;
	}

	public Job setResume(List<Resume> resume) {
		this.resume = resume;
		return this;
	}
	
	/**
	 * 将当前职位下线
	 */
	public void offline(){
		String sql="SELECT * FROM t_resume_deliver WHERE job_id=?";
		List<ResumeDeliver> resumeDeliverList=ResumeDeliver.dao.find(sql, getId());
		for(ResumeDeliver resumeDeliver : resumeDeliverList){
			
			StringBuilder msgContent=new StringBuilder();
			msgContent.append("职位下线：您投递过简历的职位").append(getName()).append("已经被下线掉了");
			Msg msg=new Msg();
			msg.setId(GenUtil.id()).setUserId(resumeDeliver.getResume().getUserId()).setMsgContent(msgContent.toString()).save();
			
			resumeDeliver.delete();
		}
		deleteById(getId());
	}
	
	/**
	 * 返回可读形式的学历要求
	 * @return
	 */
	public String getPlainEducationRequire(){
		int educationRequire=getEducationRequire();
		switch(educationRequire){
		case 0:
			return "无要求";
		case 1:
			return "大专";
		case 2:
			return "本科";
		case 3:
			return "研究生";
		case 4:
			return "博士及以上";
		default :
			return "无要求";
		}
	}
	
	/**
	 * 获得以K为单位的薪水-low
	 */
	public int getSalaryLowK(){
		return getSalaryLow()/1000;
	}
	
	/**
	 * 获得以K为单位的薪水-low
	 */
	public int getSalaryHighK(){
		return getSalaryHigh()/1000;
	}
	
	/**创建这个职位的人*/
	private User user;

	public User getUser() {
		if(user==null){
			user=User.dao.findById(getUserId());
		}
		return user;
	}

	public Job setUser(User user) {
		this.user = user;
		return this;
	}
	
	/**
	 * 获得位置的剪短信息
	 * @param length
	 * @return
	 */
	public String getBriefLocation(int length){
		String location=getLocation();
		if(StringUtils.isBlank(location)){
			return "";
		}else if(location.length()<=length){
			return location;
		}else {
			return location.substring(0, length-3)+"...";
		}
	}
	
	/**
	 * 获得简短的职位名
	 * @param length
	 * @return
	 */
	public String getBriefName(int length){
		String name=getName();
		if(StringUtils.isBlank(name)){
			return "";
		}else if(name.length()<=length){
			return name;
		}else {
			return name.substring(0, length-3)+"...";
		}
	}
	
	/**统计投递过这个之类的简历的个数*/
	private Long resumeCount;

	public Long getResumeCount() {
		String sql="SELECT COUNT(id) FROM t_resume_deliver WHERE job_id=?";
		resumeCount=Db.queryLong(sql, getId());
		return resumeCount;
	}

	public Job setResumeCount(Long resumeCount) {
		this.resumeCount = resumeCount;
		return this;
	}
	
	
	
	
	
	
	
	
	
	
	
	
}
